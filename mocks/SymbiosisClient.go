// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	symbiosis "github.com/symbiosis-cloud/symbiosis-go"
)

// SymbiosisClient is an autogenerated mock type for the SymbiosisClient type
type SymbiosisClient struct {
	mock.Mock
}

// NewClientFromAPIKey provides a mock function with given fields: apiKey, opts
func (_m *SymbiosisClient) NewClientFromAPIKey(apiKey string, opts ...symbiosis.ClientOption) (*symbiosis.Client, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, apiKey)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *symbiosis.Client
	if rf, ok := ret.Get(0).(func(string, ...symbiosis.ClientOption) *symbiosis.Client); ok {
		r0 = rf(apiKey, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*symbiosis.Client)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...symbiosis.ClientOption) error); ok {
		r1 = rf(apiKey, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSymbiosisClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewSymbiosisClient creates a new instance of SymbiosisClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSymbiosisClient(t mockConstructorTestingTNewSymbiosisClient) *SymbiosisClient {
	mock := &SymbiosisClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
